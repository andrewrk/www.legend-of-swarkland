#!/usr/bin/env python3
import subprocess
import glob
import os
import json
import datetime

def sizeof_fmt(num, suffix='B'):
    for unit in ['','K','M','G','T','P','E','Z']:
        if abs(num) < 1024.0:
            return "%3.1f%s%s" % (num, unit, suffix)
        num /= 1024.0
    return "%.1f%s%s" % (num, 'Y', suffix)

subprocess.check_call(["make", "publish-windows"])
exe_filename = glob.glob("build/publish-windows/legend-of-swarkland-*.exe")[0]
exe_name = os.path.basename(exe_filename)
exe_size = sizeof_fmt(os.path.getsize(exe_filename))
exe_date = datetime.datetime.today().strftime("%Y-%m-%d %H:%M")
public_url = "http://superjoe.s3.amazonaws.com/temp/" + exe_name

latest_sha1 = str(subprocess.check_output(["git", "rev-parse", "--short", "--verify", "HEAD"]), "utf8").strip()
source_tgz_url = "https://github.com/thejoshwolfe/legend-of-swarkland/archive/%s.tar.gz" % latest_sha1

context = {
        "public_url": public_url,
        "exe_name": exe_name,
        "exe_size": exe_size,
        "exe_date": exe_date,
        "source_tgz_url": source_tgz_url,
        "latest_sha1": latest_sha1,
}
this_directory = os.path.dirname(os.path.realpath(__file__))

index_html = os.path.join(this_directory, "index.html")
out_html = os.path.join(this_directory, "out.html")
template = open(index_html).read()
rendered = template % context
with open(out_html, 'w') as f:
    f.write(rendered)

subprocess.check_call(["rsync", "-vuz", exe_filename, "server:public_http/legend-of-swarkland/" + os.path.basename(exe_filename)])
subprocess.check_call(["rsync", "-vuz", out_html, "server:public_http/legend-of-swarkland/index.html"])
